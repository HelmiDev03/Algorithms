#include <iostream>
#include <string.h>
using namespace std;
class base{
    private:
int x,xx;
public:
base(){
    x=0;
    cout << "Base Class Default Contructor Is Called"<<endl;
}
base(int y,int y1){
    x=y;
    xx=y1;
    cout << "Base Class Prametred Contructor Is Called"<<endl;
}
void setx(int neww){
    x=neww;
}
int getx(){return x;}
int getxx(){return xx;}
void sayhi(){
    cout <<"Hi From Base Class"<<endl;
}
};

class child : public base{
 int child_attribute;
public:
child(){
    cout << "Child Class Default Contructor Is Called"<<endl;
}
child(int p,int p1,int c):base(p,p1){
    child_attribute=c;
    cout << "Child Class Prametred Contructor Is Called"<<endl;
}
void sayhi(){
    cout <<"Hi From Child Class"<<endl;
}

 };
 class child2 :public child{
     int child_of_child;
     public:
     child2(){
         cout << "Child of Child Class Default Contructor Is Called"<<endl;
     }
     
     child2(int p,int p1,int c,int c2):child(p,p1,c){
         child_of_child=c2;
         cout << "Child of Child Class Pramatred Contructor Is Called"<<endl;
     }
 };
 int main(){
     child2 x(1,2,3,4);
     child2 y;
 }
